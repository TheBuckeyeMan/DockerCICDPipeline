name: CI/CD Pipeline

on:
  push:
    branches: #Add additional branches if we neeed to add additional branches
      - main 
      - dev
      - test
      - feature/dockerimagecreation
      - feature/cd

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest 

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build -t thebuckeyeman20/cicd:image1 .

      - name: Push Docker images
        run: |
          docker push thebuckeyeman20/cicd:image1
#Teraform code for the deployment - this is what kicks off the deployment of aws resources
      - name: List Terraform Workspaces
        run: terraform workspace list
        working-directory: terraform #Adjust if we have our terraform .terraform file in a different directory
        env:
          TFE_TOKEN: ${{ secrets.TFE_TOKEN }}
      
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Terraform Init
        run: terraform init
        working-directory: terraform #Adjust if we have our terraform .terraform file in a different directory
        env:
          TFE_TOKEN: ${{ secrets.TFE_TOKEN }}

      - name: Terraform Plan
        run: terraform plan -var="aws_access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" -var="aws_secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}"
        working-directory: terraform #Adjust if we have our terraform .terraform file in a different directory
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TFE_TOKEN: ${{ secrets.TFE_TOKEN }}

      - name: Terraform Apply
        run: terraform apply -auto-approve -var="aws_access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" -var="aws_secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}"
        working-directory: terraform # Adjust if your Terraform configuration is in a different directory
        # env:
        #   AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        #   AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}





# CD Portion of the cicd process - take docker image and push to aws lambda


