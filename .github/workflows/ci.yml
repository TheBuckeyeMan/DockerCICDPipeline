#Ensure your repository Secrets for DOCKER_USERNAME, DOCKER_PASSWORD, AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY, AWS_ACCOUNT_ID are properly configured
#This pipeline is configured for spring boot applications
name: CI/CD Pipeline

on:
  push:
    branches: #Add additional branches if we neeed to add additional branches
      - main 
      - dev
      - test
      - feature/dockerimagecreation
      - feature/cd
      - feature/ecs

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest 

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Jacoco - Generate Test Coverage Report # Run a series of tests on the application -> Ensure you add the plugins to pom.xml -> For Spring Boot Applications
        run: |
          mvn jacoco:report

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Configure AWS credentials # Edit regions if you would like to deploy to different regions
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set default.region us-east-2
          aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-2.amazonaws.com

      - name: Build Docker image # Edit regions if you would like to deploy to different regions
        run: |
          docker build -t thebuckeyeman20/cicd:image1 .
          docker tag thebuckeyeman20/cicd:image1 ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-2.amazonaws.com/containers_for_ecs:containerforecs

      - name: Push Docker image to Docker Hub
        run: |
          docker push thebuckeyeman20/cicd:image1

      - name: Push Docker image to AWS ECR
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-2.amazonaws.com/containers_for_ecs:containerforecs
        
      - name: Update ECS Task Definition # MODIFY ECS for new ECS Cluster - MODIFY Region if different region is requested
        run: |
          ECS_TASK_DEFINITION=$(aws ecs describe-task-definition --task-definition ecs_task)
          echo $ECS_TASK_DEFINITION
          NEW_TASK_DEFINITION=$(echo $ECS_TASK_DEFINITION | jq --arg IMAGE "${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-2.amazonaws.com/containers_for_ecs:containerforecs" '.taskDefinition | .containerDefinitions[0].image = $IMAGE | .executionRoleArn = "<ARN_OF_THE_ROLE>" | del(.taskDefinitionArn, .revision, .status, .requiresAttributes, .compatibilities, .registeredAt, .registeredBy)')
          aws ecs register-task-definition --family ecs_task --cli-input-json "$NEW_TASK_DEFINITION"

      - name: Deploy to ECS
        run: |
          aws ecs update-service --cluster ecs_cluster --service ecs_service --force-new-deployment

